import{__awaiter as e}from"./_virtual/_tslib.js";import t from"./Ws.js";import{ENCRYPTION_SETTINGS as i}from"./symbols.js";class n extends t{constructor(e,t){"string"==typeof t?super(e,t):(super(e,t),(null==t?void 0:t.ttl)&&(this.ttl=null==t?void 0:t.ttl))}setItem(t,i,n){return e(this,void 0,void 0,(function*(){var e,r;if(!t)throw new Error("No name passed!");if(!i&&0!==i&&""!==i&&!1!==i)throw new Error("No value passed!");if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");const s=(null==n?void 0:n.ttl)||this.ttl,o=this.encryptionHandler?yield this.encryptionHandler.encrypt(JSON.stringify(i)):i;let l;try{l=yield this.request("POST",`/cache/${this.class}/${this.id}/${t}`,{value:o,ttl:s})}catch(i){if(!i||"ConflictError"!==(null===(e=null==i?void 0:i.cause)||void 0===e?void 0:e.name))throw i;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),l=yield this.request("POST",`/cache/${this.class}/${this.id}/${t}`,{value:o,ttl:s})}const a=l;return{expiresAt:null==a?void 0:a.expiresAt,keyVersion:null!==(r=null==a?void 0:a.keyVersion)&&void 0!==r?r:void 0}}))}setItems(t){return e(this,void 0,void 0,(function*(){var e,i;if(!t||0===Object.keys(t).length)throw new Error("No items passed!");if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");for(const e of Object.keys(t)){const n=this.encryptionHandler?yield this.encryptionHandler.encrypt(JSON.stringify(t[e].value)):t[e].value;t[e].value=n,(i=t[e]).ttl||(i.ttl=this.ttl)}let n;try{n=yield this.request("POST",`/cache/${this.class}/${this.id}`,t)}catch(i){if(!i||"ConflictError"!==(null===(e=null==i?void 0:i.cause)||void 0===e?void 0:e.name))throw i;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),n=yield this.request("POST",`/cache/${this.class}/${this.id}`,t)}const r=n;return Object.keys(r).reduce(((e,t)=>{var i,n,s,o;return e[t]={expiresAt:null!==(n=null===(i=r[t])||void 0===i?void 0:i.expiresAt)&&void 0!==n?n:0,keyVersion:null!==(o=null===(s=r[t])||void 0===s?void 0:s.keyVersion)&&void 0!==o?o:void 0},e}),{})}))}getItem(t){return e(this,void 0,void 0,(function*(){var e,n;if(!t)throw new Error("No name passed!");if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");let r;try{r=yield this.request("GET",`/cache/${this.class}/${this.id}/${t}`)}catch(i){if(!i||"ConflictError"!==(null===(e=null==i?void 0:i.cause)||void 0===e?void 0:e.name))throw i;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),r=yield this.request("GET",`/cache/${this.class}/${this.id}/${t}`)}const s=r,o=null==s?void 0:s.value;if(!o)return;const l=yield this.getEncryptionHandlerForKeyVersion(s.keyVersion),a=l?JSON.parse(yield l.decrypt(o)):o;return(null==s?void 0:s.keyVersion)>-1&&s.keyVersion!==(null===(n=this[i])||void 0===n?void 0:n.keyVersion)&&(this.autoUpdateOldEncryptedValues?(this.logger.log("info",`Item "${t}" has an old encryption and will be automatically updated now by setting it again.`),yield this.setItem(t,a,{ttl:s.expiresAt-Date.now()})):this.logger.log("warn",`Item "${t}" has an old encryption and can be updated by setting it again.`)),{value:a,expiresAt:s.expiresAt,keyVersion:s.keyVersion}}))}getItems(t){return e(this,void 0,void 0,(function*(){var e,n;if(!t||0===t.length)throw new Error("No names passed!");if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");let r;try{r=yield this.request("POST",`/cache-query/${this.class}/${this.id}`,t)}catch(i){if(!i||"ConflictError"!==(null===(e=null==i?void 0:i.cause)||void 0===e?void 0:e.name))throw i;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),r=yield this.request("POST",`/cache-query/${this.class}/${this.id}`,t)}const s=r;if(0===Object.keys(s).length)return;const o={},l={};for(const e of Object.keys(s)){const t=s[e],r=null==t?void 0:t.value;if(!r)continue;const a=yield this.getEncryptionHandlerForKeyVersion(t.keyVersion),d=a?JSON.parse(yield a.decrypt(r)):r;(null==t?void 0:t.keyVersion)>-1&&t.keyVersion!==(null===(n=this[i])||void 0===n?void 0:n.keyVersion)&&(o[e]=t),l[e]={value:d,expiresAt:t.expiresAt,keyVersion:t.keyVersion}}const a=Object.keys(o);if(a.length>0)if(this.autoUpdateOldEncryptedValues){this.logger.log("info",`These items "${a.join(",")}" have an old encryption and will be automatically updated now by setting them again.`);const e=a.reduce(((e,t)=>(e[t]={value:l[t].value,ttl:o[t].expiresAt-Date.now()},e)),{});yield this.setItems(e)}else this.logger.log("warn",`These items "${a.join(",")}" have an old encryption and can be updated by setting them again.`);return l}))}getAllItems(t){return e(this,void 0,void 0,(function*(){var e,i;if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");let n;try{n=yield this.request("GET",`/cache/${this.class}/${this.id}${(null==t?void 0:t.prefix)?`?prefix=${null==t?void 0:t.prefix}`:""}`)}catch(i){if(!i||"ConflictError"!==(null===(e=null==i?void 0:i.cause)||void 0===e?void 0:e.name))throw i;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),n=yield this.request("GET",`/cache/${this.class}/${this.id}${(null==t?void 0:t.prefix)?`?prefix=${null==t?void 0:t.prefix}`:""}`)}const r=n;if(0===Object.keys(r).length)return;const s={};for(const e of Object.keys(r)){const t=r[e],n=null==t?void 0:t.value;if(!n)continue;const o=yield this.getEncryptionHandlerForKeyVersion(t.keyVersion),l=o?JSON.parse(yield o.decrypt(n)):n;s[e]={value:l,expiresAt:t.expiresAt,keyVersion:null!==(i=t.keyVersion)&&void 0!==i?i:void 0}}return s}))}getAllKeys(t){return e(this,void 0,void 0,(function*(){return yield this.request("GET",`/cache-keys/${this.class}/${this.id}${(null==t?void 0:t.prefix)?`?prefix=${null==t?void 0:t.prefix}`:""}`)}))}removeItem(t){return e(this,void 0,void 0,(function*(){if(!t)throw new Error("No name passed!");yield this.request("DELETE",`/cache/${this.class}/${this.id}/${t}`)}))}removeItems(t){return e(this,void 0,void 0,(function*(){if(!t||0===t.length)throw new Error("No names passed!");yield this.request("DELETE",`/cache/${this.class}/${this.id}`,t)}))}incrementItem(t){return e(this,arguments,void 0,(function*(e,t=1,i){var n;if(!e)throw new Error("No name passed!");if(null==t)throw new Error("No value passed!");if("number"!=typeof t)throw new Error("Value needs to be a number!");const r=(null==i?void 0:i.ttl)||this.ttl,s=yield this.request("POST",`/cache/${this.class}/${this.id}/${e}/increment`,{value:t,ttl:r});return{value:null==s?void 0:s.value,expiresAt:null==s?void 0:s.expiresAt,keyVersion:null!==(n=null==s?void 0:s.keyVersion)&&void 0!==n?n:void 0}}))}decrementItem(t){return e(this,arguments,void 0,(function*(e,t=1,i){var n;if(!e)throw new Error("No name passed!");if(null==t)throw new Error("No value passed!");if("number"!=typeof t)throw new Error("Value needs to be a number!");const r=(null==i?void 0:i.ttl)||this.ttl,s=yield this.request("POST",`/cache/${this.class}/${this.id}/${e}/decrement`,{value:t,ttl:r});return{value:null==s?void 0:s.value,expiresAt:null==s?void 0:s.expiresAt,keyVersion:null!==(n=null==s?void 0:s.keyVersion)&&void 0!==n?n:void 0}}))}clear(){return e(this,void 0,void 0,(function*(){yield this.request("DELETE",`/cache/${this.class}/${this.id}`)}))}}export{n as default};
