import{__awaiter as t}from"./_virtual/_tslib.js";function e(e,r,n){return t(this,arguments,void 0,(function*(t,e,r,n=1e5){const o=new TextEncoder,i=yield crypto.subtle.importKey("raw",o.encode(t+":"+e),"PBKDF2",!1,["deriveKey"]);return crypto.subtle.deriveKey({name:"PBKDF2",salt:r,iterations:n,hash:"SHA-256"},i,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}))}function r(e,r){return t(this,void 0,void 0,(function*(){const t=new TextEncoder,n=crypto.getRandomValues(new Uint8Array(12)),o=yield crypto.subtle.encrypt({name:"AES-GCM",iv:n},e,t.encode(r));return JSON.stringify({iv:btoa(String.fromCharCode(...n)),data:btoa(String.fromCharCode(...new Uint8Array(o)))})}))}function n(e,r){return t(this,void 0,void 0,(function*(){const t=JSON.parse(r),n=new TextDecoder,o=Uint8Array.from(atob(t.iv),(t=>t.charCodeAt(0))),i=Uint8Array.from(atob(t.data),(t=>t.charCodeAt(0))),a=yield crypto.subtle.decrypt({name:"AES-GCM",iv:o},e,i);return n.decode(a)}))}export{n as decrypt,e as deriveSymmetricKey,r as encrypt};
