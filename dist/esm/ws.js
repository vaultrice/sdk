import{__awaiter as e}from"./_virtual/_tslib.js";import t from"./base.js";import{encrypt as r,decrypt as s}from"./encryption.js";class n extends t{constructor(e,t,r){super(e,t,r&&{passphrase:null==r?void 0:r.passphrase}),this.errorHandlers=[]}send(t){return e(this,arguments,void 0,(function*(e,t={transport:"ws"}){var s,n;if(this.passphrase&&!this.symKey)throw new Error("Call init() first!");const o=this.symKey?yield r(this.symKey,JSON.stringify(e)):e;if("http"===t.transport)return void(yield this.request("POST",`/message/${this.id}`,o));const i=this.getWebSocket(),a={event:"message",payload:o};(null===(s=null==this?void 0:this.metadata)||void 0===s?void 0:s.keyVersion)>-1&&(a.keyVersion=null===(n=null==this?void 0:this.metadata)||void 0===n?void 0:n.keyVersion),i.send(JSON.stringify(a))}))}on(e,t,r){const n=this.getWebSocket();if("error"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;this.errorHandlers.push(e),n.addEventListener("error",(t=>e(new Error(null==t?void 0:t.message))))}if("connect"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;n.addEventListener("open",(()=>e()))}if("disconnect"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;n.addEventListener("close",(()=>e()))}const o=(e,t,r=!1)=>{var n;if(void 0===e.keyVersion)return t(e.payload);if(e.keyVersion>-1){if(!this.passphrase)return this.errorHandlers.map((e=>e(new Error("Encrypted data, but no passhprase configured!"))));if(!this.symKey)return this.errorHandlers.map((e=>e(new Error("Encrypted data, but init() not called!"))));if(e.keyVersion!==(null===(n=null==this?void 0:this.metadata)||void 0===n?void 0:n.keyVersion))return this.errorHandlers.map((e=>e(new Error("Wrong keyVersion! Call init() again!"))));let o=e.payload.value;r&&(o=e.payload),s(this.symKey,o).then((s=>{r?e.payload=JSON.parse(s):e.payload.value=JSON.parse(s),t(e.payload)})).catch((e=>{this.errorHandlers.map((t=>t(e)))}))}};if("message"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;n.addEventListener("message",(t=>{const r=JSON.parse(t.data);"message"===r.event&&o(r,e,!0)}))}if("setItem"===e)if(void 0===r){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;n.addEventListener("message",(t=>{const r=JSON.parse(t.data);"setItem"===r.event&&o(r,e)}))}else{if("function"!=typeof r)throw new Error("No event handler defined!");const e=r,s=t;n.addEventListener("message",(t=>{const r=JSON.parse(t.data);"setItem"===r.event&&r.payload.prop===s&&o(r,e)}))}if("removeItem"===e)if(void 0===r){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;n.addEventListener("message",(t=>{const r=JSON.parse(t.data);"removeItem"===r.event&&e(r.payload)}))}else{if("function"!=typeof r)throw new Error("No event handler defined!");const e=r,s=t;n.addEventListener("message",(t=>{const r=JSON.parse(t.data);"removeItem"===r.event&&r.payload.prop===s&&e(r.payload)}))}}disconnect(){this.ws&&(this.ws.close(),delete this.ws)}getWebSocket(){if(this.ws)return this.ws;const e=n.basePath.replace("http","ws"),t=this.ws=new WebSocket(`${e}/project/${this.credentials.projectId}/ws/${this.id}`,encodeURIComponent(`Basic ${btoa(`${this.credentials.apiKey}:${this.credentials.apiSecret}`)}`));return t.addEventListener("close",(()=>{delete this.ws})),t}}export{n as default};
