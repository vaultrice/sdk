import{__awaiter as e}from"./_virtual/_tslib.js";import t from"./Base.js";class n extends t{constructor(e,t){super(e,t),this.errorHandlers=[]}send(t){return e(this,arguments,void 0,(function*(e,t={transport:"ws"}){var n,r,s;if(this.getEncryptionHandler&&!this.encryptionHandler)throw new Error("Call getEncryptionSettings() first!");const i=this.encryptionHandler?yield this.encryptionHandler.encrypt(JSON.stringify(e)):e;if("http"===t.transport){try{yield this.request("POST",`/message/${this.class}/${this.id}`,i)}catch(e){if(!e||"ConflictError"!==(null===(n=null==e?void 0:e.cause)||void 0===n?void 0:n.name))throw e;this.logger.log("warn","Your local keyVersion does not match! Will attempt to fetch the new encryption settings..."),yield this.getEncryptionSettings(),yield this.request("POST",`/message/${this.class}/${this.id}`,i)}return}const o=this.getWebSocket(),a={event:"message",payload:i};(null===(r=null==this?void 0:this.encryptionSettings)||void 0===r?void 0:r.keyVersion)>-1&&(a.keyVersion=null===(s=null==this?void 0:this.encryptionSettings)||void 0===s?void 0:s.keyVersion),o.send(JSON.stringify(a))}))}on(e,t,n){const r=this.getWebSocket();if("error"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;this.errorHandlers.push(e),r.addEventListener("error",(t=>e(new Error(null==t?void 0:t.message))))}if("connect"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;r.addEventListener("open",(()=>e()))}if("disconnect"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;r.addEventListener("close",(()=>e()))}const s=(e,t,n=!1)=>{const r=n?e.keyVersion:e.payload.keyVersion;if(void 0===r)return t(e.payload);if(r>-1){if(!this.getEncryptionHandler)return this.errorHandlers.map((e=>e(new Error("Encrypted data, but no passphrase or getEncryptionHandler configured!"))));if(!this.encryptionHandler)return this.errorHandlers.map((e=>e(new Error("Encrypted data, but getEncryptionSettings() not called!"))));let s=e.payload.value;n&&(s=e.payload),this.getEncryptionHandlerForKeyVersion(r).then((e=>null==e?void 0:e.decrypt(s))).then((r=>{n?e.payload=JSON.parse(r):e.payload.value=JSON.parse(r),t(e.payload)})).catch((e=>{this.errorHandlers.map((t=>t(e)))}))}};if("message"===e){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;r.addEventListener("message",(t=>{const n=JSON.parse(t.data);"message"===n.event&&s(n,e,!0)}))}if("setItem"===e)if(void 0===n){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;r.addEventListener("message",(t=>{const n=JSON.parse(t.data);"setItem"===n.event&&s(n,e)}))}else{if("function"!=typeof n)throw new Error("No event handler defined!");const e=n,i=t;r.addEventListener("message",(t=>{const n=JSON.parse(t.data);"setItem"===n.event&&n.payload.prop===i&&s(n,e)}))}if("removeItem"===e)if(void 0===n){if("function"!=typeof t)throw new Error("No event handler defined!");const e=t;r.addEventListener("message",(t=>{const n=JSON.parse(t.data);"removeItem"===n.event&&e(n.payload)}))}else{if("function"!=typeof n)throw new Error("No event handler defined!");const e=n,s=t;r.addEventListener("message",(t=>{const n=JSON.parse(t.data);"removeItem"===n.event&&n.payload.prop===s&&e(n.payload)}))}}disconnect(){this.ws&&(this.ws.close(),delete this.ws)}getWebSocket(){if(this.ws)return this.ws;const e=n.basePath.replace("http","ws"),t={auth:this.accessToken?`Bearer ${this.accessToken}`:`Basic ${btoa(`${this.credentials.apiKey}:${this.credentials.apiSecret}`)}`};this.idSignature&&void 0!==this.idSignatureKeyVersion&&(t.idSignature=this.idSignature,t.idSignatureKeyVersion=this.idSignatureKeyVersion);const r=new URLSearchParams(t),s=this.ws=new WebSocket(`${e}/project/${this.credentials.projectId}/ws/${this.class}/${this.id}?${r}`);return s.addEventListener("close",(()=>{delete this.ws})),s}}export{n as default};
