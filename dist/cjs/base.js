"use strict";var t=require("./_virtual/_tslib.js"),e=require("./local.js"),i=require("./encryption.js"),n=require("./uuidv4.js"),r=require("./logger.js"),s=require("./decodeJwt.js");function o(){const t=e.getLocalId();return t||`${n()}-${n()}`}const a="_undefined_";class d{constructor(n,s={id:o(),class:a,autoUpdateOldEncryptedValues:!0,logLevel:"warn"}){this.class=a;let d={class:a,logLevel:"warn"};if("string"==typeof s?(this.id=s,d={class:a,logLevel:"warn"}):(this.id=s.id||o(),d=s),this.logger=r.default(d.logLevel),!n||"object"!=typeof n||"string"!=typeof n.apiKey||"string"!=typeof n.apiSecret||"string"!=typeof n.projectId)throw new Error("Invalid credentials!");if(e.setLocalId(this.id),this.credentials=n,this.class=d.class||a,d.passphrase&&d.getEncryptionHandler)throw new Error("Either define a passphrase or a getEncryptionHandler, but not both!");d.getEncryptionHandler&&(this.getEncryptionHandler=d.getEncryptionHandler),d.passphrase&&(this.getEncryptionHandler=e=>t.__awaiter(this,void 0,void 0,(function*(){var t,n,r,s;const o=yield i.deriveSymmetricKey(d.passphrase,this.id,e.salt,d.keyDerivationOptions),a=(null===(n=null===(t=d.keyDerivationOptions)||void 0===t?void 0:t.derivedKeyType)||void 0===n?void 0:n.name)?{algorithm:null===(s=null===(r=d.keyDerivationOptions)||void 0===r?void 0:r.derivedKeyType)||void 0===s?void 0:s.name}:void 0;return{encrypt:t=>i.encrypt(o,t,a),decrypt:t=>i.decrypt(o,t,a)}}))),void 0===d.autoUpdateOldEncryptedValues&&(d.autoUpdateOldEncryptedValues=!0),this.autoUpdateOldEncryptedValues=d.autoUpdateOldEncryptedValues,d.idSignature&&(this.idSignature=d.idSignature),this.idSignature&&(this.idSignatureKeyVersion=d.idSignatureKeyVersion||0),this.isGettingAccessToken=this.getAccessToken(),this.isGettingAccessToken.then((()=>{this.isGettingAccessToken=void 0}),(()=>{this.isGettingAccessToken=void 0}))}getAccessToken(){return t.__awaiter(this,void 0,void 0,(function*(){const t=yield this.request("GET","/auth/token"),e=s(t);this.accessToken=t;const i=e.payload.exp-Date.now();setTimeout((()=>this.getAccessToken()),i-12e4)}))}getEncryptionHandlerForKeyVersion(e){return t.__awaiter(this,void 0,void 0,(function*(){if(e>-1&&(e!==this.encryptionSettings.keyVersion&&(this.previousEncryptionSettings&&0!==this.previousEncryptionSettings.length||(yield this.getEncryptionSettings())),e!==this.encryptionSettings.keyVersion)){if(!this.previousEncryptionSettings||0===this.previousEncryptionSettings.length)throw new Error(`Wrong keyVersion! Found ${e} but you're using ${this.encryptionSettings.keyVersion}`);let t=this.previousEncryptionSettings.find((t=>t.keyVersion===e));if(t||(yield this.getEncryptionSettings()),t=(this.previousEncryptionSettings||[]).find((t=>t.keyVersion===e)),!t)throw new Error(`Wrong keyVersion! Found ${e} but you're using ${this.encryptionSettings.keyVersion}`);if(!this.getEncryptionHandler)return;return this.getEncryptionHandler(t)}return this.encryptionHandler}))}handleEncryptionSettings(e){return t.__awaiter(this,void 0,void 0,(function*(){if(!this.getEncryptionHandler)throw new Error("No getEncryptionHandler defined!");this.encryptionSettings=e.encryptionSettings,this.previousEncryptionSettings=e.previousEncryptionSettings,this.encryptionHandler=yield this.getEncryptionHandler(e.encryptionSettings)}))}prepareEncryptionSettings(t){var e,i,n;return{encryptionSettings:{salt:Uint8Array.from(atob(null===(e=null==t?void 0:t.encryptionSettings)||void 0===e?void 0:e.salt),(t=>t.charCodeAt(0))),keyVersion:null===(i=null==t?void 0:t.encryptionSettings)||void 0===i?void 0:i.keyVersion,createdAt:null===(n=null==t?void 0:t.encryptionSettings)||void 0===n?void 0:n.createdAt},previousEncryptionSettings:((null==t?void 0:t.previousEncryptionSettings)||[]).map((t=>({salt:Uint8Array.from(atob(null==t?void 0:t.salt),(t=>t.charCodeAt(0))),keyVersion:null==t?void 0:t.keyVersion,createdAt:null==t?void 0:t.createdAt})))}}getEncryptionSettings(){return t.__awaiter(this,arguments,void 0,(function*(t=16){if(!this.passphrase&&!this.getEncryptionHandler)throw new Error("No passphrase and no getEncryptionHandler passed! This function is only allowed with e2e encryption!");const e=yield this.request("POST",`/cache-encryption/${this.class}/${this.id}`,{saltLength:t}),i=this.prepareEncryptionSettings(e);return yield this.handleEncryptionSettings(i),i}))}rotateEncryption(){return t.__awaiter(this,arguments,void 0,(function*(t=16){if(!this.passphrase&&!this.getEncryptionHandler)throw new Error("No passphrase and no getEncryptionHandler passed! This function is only allowed with e2e encryption!");const e=yield this.request("POST",`/cache-encryption-rotate/${this.class}/${this.id}`,{saltLength:t}),i=this.prepareEncryptionSettings(e);return yield this.handleEncryptionSettings(i),i}))}request(e,i,n){return t.__awaiter(this,void 0,void 0,(function*(){var t;!this.accessToken&&this.isGettingAccessToken&&(yield this.isGettingAccessToken);const r={Authorization:this.accessToken?`Bearer ${this.accessToken}`:`Basic ${btoa(`${this.credentials.apiKey}:${this.credentials.apiSecret}`)}`},s="string"==typeof n,o=null===(t=null==this?void 0:this.encryptionSettings)||void 0===t?void 0:t.keyVersion;void 0!==o&&o>-1&&(r["X-Enc-KV"]=o.toString()),this.idSignature&&void 0!==this.idSignatureKeyVersion&&(r["X-Id-Sig"]=this.idSignature,r["X-Id-Sig-KV"]=this.idSignatureKeyVersion.toString()),n&&(r["Content-Type"]=s?"text/plain":"application/json");const a=yield fetch(`${d.basePath}/project/${this.credentials.projectId}${i}`,{method:e,headers:r,body:n?s?n:JSON.stringify(n):void 0}),c=a.headers.get("content-type");let p;if(c)try{0===c.indexOf("text/plain")?p=yield a.text():0===c.indexOf("application/json")&&(p=yield a.json())}catch(t){p=`${a.status} - ${a.statusText}`}if(!a.ok){if("string"==typeof p)throw new Error(p);if(p)throw p;if(404!==a.status)throw new Error(`${a.status} - ${a.statusText}`)}return p}))}}d.basePath="https://api.vaultrice.app",module.exports=d;
