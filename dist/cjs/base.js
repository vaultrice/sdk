"use strict";var t=require("./_virtual/_tslib.js"),i=require("./local.js"),e=require("./encryption.js"),n=require("./uuidv4.js"),s=require("./logger.js");const r="_undefined_";class o{constructor(t,e=function(){return i.getLocalId()||`${n()}-${n()}`}(),o={class:r,logLevel:"warn"}){if(this.id=e,this.class=r,this.logger=s.default(o.logLevel),!t||"object"!=typeof t||"string"!=typeof t.apiKey||"string"!=typeof t.apiSecret||"string"!=typeof t.projectId)throw new Error("Invalid credentials!");i.setLocalId(this.id),this.credentials=t,this.class=o.class||r,o.passphrase&&(this.passphrase=o.passphrase),o.signedId&&(this.signedId=o.signedId),this.signedId&&(this.idSignatureKeyVersion=o.idSignatureKeyVersion||0)}getSymKey(i){return t.__awaiter(this,void 0,void 0,(function*(){return e.deriveSymmetricKey(this.passphrase,this.id,i.salt)}))}getSymKeyForKeyVersion(i){return t.__awaiter(this,void 0,void 0,(function*(){if(i>-1&&(i!==this.encryptionSettings.keyVersion&&(this.previousEncryptionSettings&&0!==this.previousEncryptionSettings.length||(yield this.getEncryptionSettings())),i!==this.encryptionSettings.keyVersion)){if(!this.previousEncryptionSettings||0===this.previousEncryptionSettings.length)throw new Error(`Wrong keyVersion! Found ${i} but you're using ${this.encryptionSettings.keyVersion}`);let t=this.previousEncryptionSettings.find((t=>t.keyVersion===i));if(t||(yield this.getEncryptionSettings()),t=(this.previousEncryptionSettings||[]).find((t=>t.keyVersion===i)),!t)throw new Error(`Wrong keyVersion! Found ${i} but you're using ${this.encryptionSettings.keyVersion}`);return this.getSymKey(t)}return this.symKey}))}handleEncryptionSettings(i){return t.__awaiter(this,void 0,void 0,(function*(){var t,e;this.encryptionSettings={salt:Uint8Array.from(atob(null===(t=null==i?void 0:i.encryptionSettings)||void 0===t?void 0:t.salt),(t=>t.charCodeAt(0))),keyVersion:null===(e=null==i?void 0:i.encryptionSettings)||void 0===e?void 0:e.keyVersion},this.previousEncryptionSettings=((null==i?void 0:i.previousEncryptionSettings)||[]).map((t=>({salt:Uint8Array.from(atob(null==t?void 0:t.salt),(t=>t.charCodeAt(0))),keyVersion:null==t?void 0:t.keyVersion}))),this.symKey=yield this.getSymKey(this.encryptionSettings)}))}getEncryptionSettings(){return t.__awaiter(this,arguments,void 0,(function*(t=16){if(!this.passphrase)throw new Error("No passphrase passed! This function is only allowed with e2e encryption!");const i=yield this.request("POST",`/cache-encryption/${this.class}/${this.id}`,{saltLength:t});return this.handleEncryptionSettings(i)}))}rotateEncryption(){return t.__awaiter(this,arguments,void 0,(function*(t=16){if(!this.passphrase)throw new Error("No passphrase passed! This function is only allowed with e2e encryption!");const i=yield this.request("POST",`/cache-encryption-rotate/${this.class}/${this.id}`,{saltLength:t});return this.handleEncryptionSettings(i)}))}request(i,e,n){return t.__awaiter(this,void 0,void 0,(function*(){var t;const s="string"==typeof n,r={Authorization:`Basic ${btoa(`${this.credentials.apiKey}:${this.credentials.apiSecret}`)}`},a=null===(t=null==this?void 0:this.encryptionSettings)||void 0===t?void 0:t.keyVersion;void 0!==a&&a>-1&&(r["X-Enc-KV"]=a.toString()),this.signedId&&void 0!==this.idSignatureKeyVersion&&(r["X-Id-Sig"]=this.signedId,r["X-Id-Sig-KV"]=this.idSignatureKeyVersion.toString()),n&&(r["Content-Type"]=s?"text/plain":"application/json");const h=yield fetch(`${o.basePath}/project/${this.credentials.projectId}${e}`,{method:i,headers:r,body:s?n:JSON.stringify(n)}),d=h.headers.get("content-type");let y;if(d&&(0===d.indexOf("text/plain")?y=yield h.text():0===d.indexOf("application/json")&&(y=yield h.json())),!h.ok){if("string"==typeof y)throw new Error(y);if(y)throw new Error(y.message)}return y}))}}o.basePath="http://localhost:5173",module.exports=o;
